package mc.com.beans;
// Generated 13 nov. 2018 10:23:21 by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Posts generated by hbm2java
 */
@Entity
@Table(name = "posts")
public class Post implements java.io.Serializable {

	private int id;
	private Category category;
	private String title;
	private String author;
	private Date created;
	private String description;
	private String fileName;
	private String image;
	private Date updated;
	
	private Set<PostTag> postTags = new HashSet<PostTag>(0);
	
	private Set<Project> projects = new HashSet<Project>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}
	
	public Post() {
	}


	public Post(Category category, String title, String author, Date created, String description, String fileName,
			String image, Date updated, Set<PostTag> postTags) {
		this.category = category;
		this.title = title;
		this.author = author;
		this.created = created;
		this.description = description;
		this.fileName = fileName;
		this.image = image;
		this.updated = updated;
		this.postTags = postTags;
	}
	
	public Post(Category category, String title, String description, String filename) {
		this.category = category;
		this.title = title;
		this.description = description;
		this.fileName = filename;
		
		this.author="mc";
		this.created = new Date();
		this.updated = new Date();
	}
	

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoryid")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "Author")
	public String getAuthor() {
		return this.author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "FileName")
	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Column(name = "Image")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "Title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Updated", nullable = false, length = 19)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "posts")
	public Set<PostTag> getPostTags() {
		return this.postTags;
	}

	public void setPostTags(Set<PostTag> postTags) {
		this.postTags = postTags;
	}

	@Override
	public String toString() {
		return "Post [id=" + id + ", category=" + category.getId() + ", title=" + title + ", date=" + created + ", descriptionription="
				+ description + ", filename=" + fileName + "]";
	}

}
